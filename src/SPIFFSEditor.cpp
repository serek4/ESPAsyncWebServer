#include "SPIFFSEditor.h"
#include <FS.h>

//File: edit.htm.gz, Size: 4151
#define edit_htm_gz_len 5173
const uint8_t edit_htm_gz[] PROGMEM = {
		0x1F,0x8B,0x08,0x08,0x11,0x2F,0x40,0x5F,0x04,0x00,0x65,0x64,0x69,0x74,0x2E,0x68,
		0x74,0x6D,0x00,0xC5,0x1C,0xE9,0x7A,0xDA,0x46,0xF0,0x7F,0x9E,0x62,0xA3,0x1E,0x88,
		0x72,0xFA,0x88,0x9B,0x62,0xE3,0x14,0x63,0x7C,0xC4,0xB7,0x81,0xB4,0x4E,0x9A,0xF6,
		0x13,0xD2,0x02,0xB2,0x85,0xA4,0x4A,0xC2,0x40,0x52,0xBF,0x7B,0x67,0xF6,0xD0,0xEA,
		0x00,0xC7,0x49,0x7A,0x38,0x31,0xA0,0xDD,0x99,0xD9,0xD9,0xB9,0xF7,0xC0,0x3B,0xCF,
		0x2B,0x95,0xDE,0xD8,0x0E,0x09,0xFC,0x8F,0xC6,0x94,0xF8,0x8E,0x61,0xBB,0x64,0x1C,
		0x4D,0x1C,0x12,0x7A,0xD3,0xC0,0xA4,0xC4,0x1B,0xB2,0x8E,0x31,0x9D,0x13,0xEA,0x9A,
		0x9E,0x45,0x2D,0xD2,0xB1,0xEC,0xC8,0x0B,0x2A,0x97,0xC6,0x88,0x12,0x3A,0x19,0x50,
		0x0B,0x1B,0x01,0xAD,0x7B,0x79,0x7C,0x70,0xD0,0xE5,0xBD,0x55,0xD3,0xF7,0x49,0xA5,
		0xB2,0xFB,0x6C,0xE7,0xF9,0xFE,0x45,0xBB,0x77,0x73,0xD9,0x61,0x54,0xE1,0x99,0x11,
		0x77,0x0C,0x77,0xD4,0xD4,0xA8,0xAB,0x61,0x03,0x35,0x2C,0x78,0x8B,0xEC,0xC8,0xA1,
		0xBB,0x9D,0xEE,0xA5,0xA0,0xBF,0x53,0x63,0x2D,0xD0,0x13,0x46,0x0B,0x87,0x92,0x68,
		0xE1,0xD3,0xA6,0x16,0xD1,0x79,0x54,0x33,0xC3,0x50,0x23,0x13,0x6A,0xD9,0x46,0x53,
		0x0B,0xCD,0x80,0x32,0x3A,0x55,0x73,0x42,0x3E,0x3E,0x23,0xE4,0x43,0xC5,0x76,0x2D,
		0x3A,0x6F,0x90,0x8D,0x7A,0x7D,0x1B,0x9E,0x7D,0x2F,0xB4,0x23,0xDB,0x73,0x1B,0xC4,
		0x18,0x84,0x9E,0x33,0x8D,0x28,0xB6,0x3A,0x74,0x18,0x35,0xC8,0x0B,0x7F,0x8E,0x0F,
		0x03,0x2F,0xB0,0x68,0xD0,0x20,0x6B,0xFE,0x9C,0x00,0x88,0x6D,0x91,0x6F,0x36,0x37,
		0x37,0x59,0x8F,0x61,0xDE,0x8D,0x02,0x6F,0xEA,0x5A,0x15,0xD3,0x73,0x3C,0x80,0xF9,
		0xE6,0xE0,0x05,0xFE,0xC3,0x4E,0xCB,0x0E,0x41,0x5E,0x8B,0x06,0x71,0x3D,0x97,0x72,
		0x3A,0xF3,0x4A,0x38,0x36,0x2C,0x6F,0xD6,0x20,0x75,0xF8,0xB7,0x56,0x07,0x82,0xC1,
		0x68,0x60,0xE8,0xA4,0x5E,0x16,0xFF,0xAB,0x9B,0xA4,0x88,0xB0,0x43,0xCF,0x8D,0x2A,
		0xA1,0xFD,0x81,0xC2,0xB0,0xEB,0xFE,0x3C,0x6E,0x1A,0x1A,0x13,0xDB,0x01,0x9A,0xA1,
		0xE1,0x86,0x95,0x90,0x06,0xF6,0x30,0xEE,0x9A,0x51,0x7B,0x34,0x8E,0x1A,0x03,0xCF,
		0xB1,0xB6,0x9F,0x3D,0xB0,0x09,0x4F,0x1D,0x36,0x67,0xC7,0x0E,0x81,0x18,0x8A,0x49,
		0x31,0x13,0x79,0x3E,0x70,0x21,0xE7,0x2A,0x3E,0x4E,0x8C,0x60,0x64,0xBB,0xE2,0xC1,
		0x37,0x2C,0xCB,0x76,0x47,0xF0,0x24,0xC8,0x01,0x1D,0x46,0x4E,0x89,0x2C,0xA0,0x8E,
		0x11,0xD9,0xF7,0x94,0xE1,0xDA,0x6E,0x65,0x66,0x5B,0xD1,0xB8,0x41,0xB6,0xEA,0x9C,
		0x63,0x73,0x1A,0x84,0x20,0x14,0x40,0xB0,0xDD,0x88,0x06,0x92,0x4C,0xE8,0x1B,0x2E,
		0x23,0xC4,0x65,0x26,0xA5,0xA9,0x04,0x66,0xBB,0x8E,0xED,0xD2,0xCA,0xC0,0xF1,0xCC,
		0xBB,0x14,0x27,0x5B,0x40,0x37,0xE6,0xA5,0x31,0xF6,0xEE,0x69,0x40,0x3E,0x26,0xB4,
		0x20,0x68,0x91,0x34,0x88,0x18,0x30,0x1E,0xAE,0xD3,0xE9,0x30,0x90,0xE8,0x7E,0x0A,
		0x12,0x2A,0x13,0xFC,0x20,0xE6,0xA6,0x86,0xCA,0xCB,0x23,0x2F,0x45,0x4E,0x03,0xD8,
		0xF5,0xA7,0x11,0x60,0xAF,0x32,0x26,0xCF,0x37,0x4C,0x3B,0x5A,0x00,0x99,0x18,0xE5,
		0xA3,0x50,0x1A,0x52,0x0A,0x26,0x86,0xC3,0x94,0x4C,0xDE,0xD0,0xC0,0x32,0x5C,0xA3,
		0x4C,0x5A,0x81,0x6D,0x00,0x63,0xDD,0x94,0x92,0x2B,0x13,0xEF,0x43,0x65,0x0A,0x8F,
		0xD0,0xE4,0x50,0x33,0x52,0xBA,0x04,0xD5,0x0F,0xEE,0xEC,0x68,0x79,0x67,0xBE,0x31,
		0x2F,0x79,0x26,0xEE,0x31,0xB7,0x1F,0xB2,0x06,0x52,0x96,0x8C,0x0A,0xD1,0xC5,0xA2,
		0xA8,0x0C,0xBC,0x28,0xF2,0x26,0x0D,0xE1,0x19,0x4A,0x5A,0xDC,0xA0,0x5F,0x2E,0xD5,
		0xFB,0xA3,0xBA,0x4D,0x8E,0x8A,0xCF,0xA0,0xAF,0xC8,0x36,0x0D,0xA7,0x62,0x38,0xF6,
		0x08,0x04,0x39,0xB1,0x2D,0xCB,0x41,0x9E,0x53,0x6A,0x9E,0x06,0x8E,0x5E,0xB0,0x8C,
		0xC8,0x68,0xD8,0x13,0x88,0x33,0x35,0xDF,0x1D,0x6D,0x0F,0x8C,0x90,0x6E,0x6D,0x96,
		0xED,0x37,0x7B,0x17,0xD7,0xB3,0xFA,0xC9,0xE1,0xC8,0x6B,0xC1,0xCF,0x79,0xB7,0x3F,
		0xEE,0xF4,0x47,0xF0,0x69,0xAF,0x85,0x3F,0x57,0xED,0xD6,0x15,0xBC,0xB5,0xD7,0x4A,
		0xB7,0xC3,0x3F,0x5B,0xD8,0x7C,0x68,0xED,0xF5,0xFA,0x9D,0x56,0xEB,0xA4,0x76,0x7C,
		0x3E,0xFB,0xE5,0x64,0xEB,0x0A,0x1B,0x9D,0xFA,0xF5,0x9B,0x71,0xBD,0xBF,0xFE,0xD3,
		0xC4,0x3A,0xB2,0xC6,0xE6,0xA4,0xDF,0xBA,0xFA,0xE5,0xFA,0xFE,0x66,0xD2,0x1F,0x75,
		0x7F,0x59,0x1B,0xBF,0x5D,0x7F,0xD3,0x7D,0xFB,0xCB,0xC1,0x1D,0xFD,0xF5,0xE8,0xF5,
		0xDB,0xDE,0x0C,0x10,0xF6,0xBD,0x6E,0xFF,0x7A,0xEF,0xCD,0xDE,0xE8,0xED,0x9E,0xD9,
		0x99,0x0F,0x9C,0xF3,0xBD,0xC3,0xD6,0xA0,0xB5,0x6E,0x52,0x3A,0xEA,0x5D,0xEF,0x4D,
		0x8F,0x4F,0x2E,0x46,0xB6,0x3D,0xEE,0xBE,0x3D,0xEF,0x99,0xED,0x17,0xA7,0xFD,0xA3,
		0x96,0x3D,0x3E,0x7F,0x7D,0x5D,0xBF,0x3B,0x3C,0x69,0xEF,0x9B,0x37,0xAF,0x6F,0xB6,
		0xF6,0x37,0x6A,0x3F,0xFE,0x78,0x66,0x5D,0xD8,0x6E,0xEF,0xFE,0x43,0x6B,0xD4,0x9E,
		0xBD,0x5C,0x84,0xBD,0xF1,0xF1,0xBD,0x5B,0x7B,0xE3,0xDD,0x1E,0x2F,0xCE,0xE0,0xF7,
		0xF2,0xB2,0x34,0xE8,0xAE,0x85,0xFD,0xAB,0xE3,0x37,0xEB,0xE1,0x4F,0x2F,0xFC,0xBD,
		0xFD,0xFD,0xFB,0xC9,0xE0,0xB2,0x36,0xB1,0xEE,0x86,0xD1,0xCB,0x8D,0xC8,0xBF,0x19,
		0x4D,0xDF,0xFE,0xF9,0xE2,0xF5,0xB8,0x76,0x41,0x8D,0x9B,0x71,0x69,0xF1,0x61,0xF1,
		0x72,0xDC,0x3B,0xBA,0x3F,0x77,0x8C,0xF9,0xF9,0xB9,0xF9,0x61,0x52,0x72,0x8C,0x9F,
		0x2E,0x7A,0x8E,0x11,0xAC,0xF5,0xAD,0x56,0xAD,0xD4,0x5E,0x6F,0x6D,0x46,0xC1,0x75,
		0xDB,0xDD,0xDF,0xB8,0xED,0xBE,0xDC,0xDB,0x5B,0xF3,0x06,0x7F,0xAE,0x1F,0xDE,0x6D,
		0x1D,0xF6,0xB7,0xAE,0x06,0x57,0xAD,0xEE,0xE6,0x5E,0xDF,0xB8,0xE9,0x5E,0xB5,0x86,
		0x9B,0x83,0xF1,0xF8,0xE4,0xA4,0x77,0x60,0xB5,0x3E,0x04,0xAD,0x8B,0x59,0x6B,0xDE,
		0xE9,0xB7,0x8E,0x4A,0x27,0x9D,0xB3,0xFA,0x5A,0xF7,0x66,0x63,0x74,0xB6,0x35,0xDB,
		0x0B,0x3B,0xAD,0xAB,0xBD,0xFA,0xE8,0x75,0x69,0x62,0xBC,0xF5,0xDA,0x1B,0xA3,0xE3,
		0x2D,0xFB,0xF2,0xC6,0x68,0x1D,0xEF,0xBD,0x0E,0xED,0xEB,0xC9,0x51,0xBF,0xDE,0x6A,
		0x9D,0x5E,0xD0,0x83,0xF6,0x86,0x71,0xB2,0x6E,0xFE,0x02,0xF2,0xEF,0xFF,0x4A,0x7F,
		0x2C,0xB5,0x66,0x17,0x75,0xC7,0xFC,0x89,0xF6,0x8E,0x6E,0x7A,0x4C,0x3B,0x1D,0xE7,
		0xA0,0x77,0xD7,0x9D,0x5E,0x4D,0xDA,0xED,0x42,0x11,0xAC,0xB5,0x12,0x50,0x9F,0x1A,
		0x51,0x26,0xD6,0x2A,0x37,0xC3,0x08,0x5A,0xCF,0x98,0xAB,0x8C,0x0B,0x80,0x83,0xE9,
		0xA0,0x62,0x51,0xD3,0x0B,0x0C,0x0E,0x0F,0xD8,0x34,0x40,0x03,0x44,0x8C,0x9F,0x59,
		0x8E,0x20,0x3C,0x45,0x10,0xC3,0xB5,0x88,0x2E,0x3D,0x09,0x82,0x19,0xE0,0xDD,0xDB,
		0x26,0xAD,0xF8,0xF6,0x9C,0x3A,0x15,0x46,0xA0,0x51,0x2F,0x22,0x55,0x1C,0x09,0xDF,
		0x95,0xE3,0x19,0xAE,0x3D,0x11,0x23,0xC8,0x16,0xEB,0xD6,0x30,0x29,0x44,0x65,0x70,
		0xBC,0x09,0xBC,0x73,0x0F,0xC4,0xBC,0x38,0x98,0x8E,0x86,0xF6,0x1C,0xFC,0x60,0x68,
		0xBB,0x76,0x44,0xC9,0x5A,0x88,0xB3,0x7B,0x78,0x06,0x2F,0x3F,0x4B,0x7A,0x77,0x74,
		0x31,0x0C,0x8C,0x09,0x0D,0x9F,0x4C,0x8E,0xF3,0x33,0x0C,0xBC,0x09,0x04,0x3A,0xF6,
		0x39,0x1B,0xCB,0x60,0x0C,0xDE,0x11,0x79,0x8F,0x80,0x30,0x56,0x1E,0x9E,0x7D,0x33,
		0xF5,0x1D,0xCF,0xB0,0x58,0x78,0x5D,0x19,0xD7,0x54,0x0A,0x09,0xD0,0x87,0x33,0xE9,
		0x44,0xF9,0xF6,0x3A,0x84,0x85,0x5C,0x94,0x59,0xDF,0x4C,0x85,0x90,0x0A,0x43,0x63,
		0x29,0x31,0xA3,0xEC,0x4C,0xA8,0xE2,0x8F,0x2C,0x86,0x23,0x9F,0x11,0xE8,0xEE,0x93,
		0x3C,0x4A,0x06,0x78,0xF0,0xCA,0xF3,0xC9,0xD3,0xD6,0xFA,0x8B,0x7A,0x26,0xAA,0x01,
		0x1A,0x1B,0x84,0xB2,0x8A,0xA3,0x4C,0xBE,0xF1,0x03,0xB0,0x09,0x3A,0x7B,0xF2,0x80,
		0x52,0x2E,0x2B,0x06,0x67,0x23,0xAA,0x0A,0x83,0xCB,0x40,0x55,0x19,0x72,0x92,0x6A,
		0xD8,0x65,0x92,0x11,0x60,0x8A,0xED,0x17,0x82,0xEB,0x27,0x2A,0x70,0x63,0xEB,0xBB,
		0x04,0xAB,0x9B,0xF5,0xEF,0x98,0x33,0x49,0x64,0xE8,0x89,0x6B,0x26,0x54,0x0F,0xFC,
		0x20,0xB4,0x2A,0x8A,0x5E,0x2A,0x76,0x07,0x2F,0xF0,0xDF,0x36,0xA9,0xFD,0x40,0x0E,
		0x03,0xBA,0x20,0x3F,0xD4,0x12,0x90,0x15,0x18,0x2C,0x05,0xBD,0xB1,0xF9,0xD3,0x4B,
		0x6B,0xC0,0xA0,0xF7,0x9C,0x29,0xCD,0x40,0x73,0x69,0x7D,0x06,0x42,0x60,0x58,0xF6,
		0x34,0x84,0x9A,0xAD,0xCE,0xA6,0x23,0x94,0x8A,0x76,0x26,0x64,0x2C,0xCD,0x31,0xD5,
		0x94,0x70,0xDC,0xD0,0x87,0x1A,0x75,0x3D,0x64,0x56,0x6A,0x04,0xB1,0x7F,0x22,0x9C,
		0x4A,0x5F,0x32,0xEF,0x3F,0xFB,0x39,0x76,0x51,0x86,0x28,0x04,0x55,0xFF,0x0E,0xC4,
		0x1D,0x05,0x90,0xB6,0x87,0x90,0xD6,0xA1,0x3E,0xF2,0x22,0x23,0xA2,0x7A,0xDD,0xA2,
		0xA3,0x22,0x94,0x1C,0x0C,0x66,0xAD,0xBE,0x02,0x6A,0x63,0x4B,0xC2,0xC1,0x00,0x3B,
		0x35,0xA8,0x34,0x78,0x79,0x6B,0x06,0xB6,0x1F,0xED,0x3E,0xB3,0x87,0x44,0xC7,0x22,
		0x17,0x2A,0xEE,0x5F,0xCF,0x4E,0x8F,0xA2,0xC8,0xBF,0xA6,0x7F,0x4E,0x69,0x18,0x91,
		0x66,0xB3,0x49,0x34,0x8C,0x6C,0x43,0x60,0xDD,0xD2,0x8A,0xC8,0x4C,0x0E,0x86,0x0C,
		0xA7,0xAE,0x89,0x33,0x25,0x3A,0x07,0x20,0xC0,0xC2,0x02,0x18,0x09,0x68,0x34,0x0D,
		0x5C,0xE2,0x82,0x7D,0xB5,0x4C,0x2C,0xE6,0x7E,0xBD,0x18,0xDC,0x42,0x6C,0xD1,0xB5,
		0xB3,0x70,0x3E,0x71,0xD6,0xAB,0x48,0xA9,0xD7,0xBB,0xAC,0x6E,0x55,0xEB,0x1A,0x72,
		0x47,0x4C,0x23,0x32,0xC7,0x44,0xA7,0x40,0xE7,0xE1,0x4B,0x08,0x6D,0x7C,0x39,0x21,
		0xDB,0x0C,0xBC,0xD0,0x1B,0x46,0x92,0xD6,0x2A,0x3A,0xE3,0xC0,0x9B,0x31,0x02,0x9D,
		0x20,0xF0,0x02,0x5D,0x63,0x8B,0x98,0x01,0x34,0x86,0x60,0xD4,0x96,0x07,0x5A,0x73,
		0xBD,0x88,0x84,0x53,0xDF,0xF7,0x82,0x28,0x23,0xAB,0x2A,0x10,0xC5,0x30,0xC8,0xF4,
		0x1C,0x4B,0x6D,0x44,0x75,0x03,0xA3,0xBF,0xE0,0x0E,0x88,0x98,0x53,0x8C,0xC4,0xD5,
		0x11,0x8D,0x3A,0x3C,0x28,0xEF,0x2D,0x8E,0x2D,0x00,0x02,0x3C,0x85,0x66,0xAE,0x42,
		0x83,0xA4,0x03,0x4A,0x17,0x98,0x02,0x4B,0xA1,0x41,0xF9,0x04,0xE4,0x4E,0xE8,0x42,
		0x37,0x82,0xC0,0x58,0x94,0x09,0x98,0x1B,0xCC,0x4E,0xD1,0x61,0xCD,0x55,0x04,0xD3,
		0x25,0x92,0x0E,0x85,0xE3,0x40,0xEA,0xF6,0x1E,0x4C,0x78,0x0E,0x5A,0x37,0xDE,0x01,
		0xE6,0xFB,0x6D,0xF6,0xBC,0x80,0xE7,0x01,0x7F,0x06,0x98,0x98,0x94,0xAE,0xCF,0xC9,
		0x0E,0x01,0xF2,0xAF,0x48,0x65,0x8D,0x34,0xD8,0xF3,0x2E,0x7F,0xC6,0xC7,0x7A,0x91,
		0x8B,0x83,0x73,0xF8,0x0C,0x09,0x5D,0x4D,0xE9,0x94,0x5A,0x42,0x5C,0x34,0x58,0x62,
		0x5C,0x11,0xC8,0xBB,0xFA,0x27,0x82,0x41,0xE7,0x3B,0x18,0x4F,0x34,0x05,0x53,0xD7,
		0x85,0x18,0x85,0x18,0x86,0x13,0xD2,0xB8,0x1D,0xEC,0x63,0x0C,0x1A,0x80,0x76,0x77,
		0xEA,0x38,0x38,0x52,0x66,0x8C,0xAA,0x0F,0x5E,0xE2,0xA1,0xFD,0x03,0x0C,0x8E,0xF0,
		0x47,0xC0,0xBB,0x1A,0xF1,0xD8,0x3A,0xB4,0x30,0x51,0xE7,0xC6,0x8A,0x82,0xA9,0xF0,
		0x63,0x7B,0xA8,0x3F,0x07,0x30,0xF0,0xEE,0x30,0x32,0x5C,0x13,0x9D,0x89,0xDB,0x56,
		0x51,0x48,0x63,0x5B,0x4A,0x0F,0x68,0x18,0xE0,0x36,0x8C,0x14,0x6F,0xC4,0x17,0x35,
		0x51,0xE3,0xD6,0x98,0xB7,0x07,0xFA,0xBC,0x6C,0x15,0xA5,0xC5,0x2A,0x4E,0x90,0x0D,
		0xF6,0x83,0x4E,0x3B,0xAF,0x82,0xAA,0xAD,0x45,0x17,0x9D,0x9C,0x80,0xAB,0x6E,0xC6,
		0xBD,0x04,0xAD,0x4A,0xE3,0xA1,0x56,0x2B,0x56,0x99,0xC7,0x57,0x45,0xA8,0x81,0xA1,
		0x35,0x8C,0x36,0xDA,0x76,0x0C,0x6C,0x55,0xA1,0x2E,0x76,0x30,0x01,0x00,0xCD,0x10,
		0xC8,0x4D,0xC3,0x32,0x41,0xEA,0xA1,0xEF,0xB9,0x21,0xED,0x41,0xB1,0x53,0xE4,0xD0,
		0x62,0xAA,0x38,0x05,0xAE,0x85,0xAA,0x43,0xDD,0x51,0x34,0x66,0xA1,0xA2,0x5E,0x64,
		0x73,0xCB,0xEA,0x22,0x83,0xA9,0x00,0x04,0xB8,0x14,0x78,0x92,0x6A,0x38,0xB6,0x87,
		0x91,0xCE,0x0D,0x84,0x97,0x0F,0xEC,0x95,0xBF,0x3D,0xFB,0xF4,0x04,0xD9,0x2A,0x40,
		0xCC,0x30,0x16,0xBC,0x8F,0x3D,0x5A,0xAC,0x2F,0x18,0xB6,0xEA,0x1B,0x10,0x6A,0xC3,
		0xA4,0xD6,0x0E,0x20,0x72,0xEE,0x43,0xFD,0x2F,0x65,0xC9,0xB0,0x14,0xA8,0x2C,0x78,
		0x28,0x4C,0x2C,0x4D,0x24,0xAF,0xFA,0x98,0x04,0x44,0x63,0xA2,0x03,0x07,0xE8,0x6C,
		0x00,0x96,0x20,0x27,0xBD,0x4A,0xB0,0xE4,0xF3,0x90,0xAB,0x15,0x59,0xA3,0x1C,0xBF,
		0xD4,0x24,0x6C,0x9C,0x09,0x8D,0xC6,0x9E,0xC5,0x41,0x0E,0x3B,0x3D,0xAD,0xF8,0x4A,
		0x7B,0xA5,0x35,0x34,0xA5,0x48,0xC6,0x55,0x16,0x55,0xFB,0x9E,0x01,0xA8,0x16,0xB1,
		0x9F,0xD2,0xBF,0x3E,0x6E,0x7B,0x13,0x50,0x30,0x86,0x09,0x8C,0x02,0x25,0xAD,0xA9,
		0x95,0xF2,0x7D,0x89,0x29,0x32,0x17,0x57,0x3A,0xE1,0x1F,0x62,0x9D,0xE4,0x3D,0x8E,
		0xCE,0x32,0x11,0x50,0x07,0xE4,0x2C,0x60,0xD5,0x73,0x99,0x19,0x87,0x68,0xC6,0xE6,
		0x18,0x36,0x68,0xC0,0x98,0xA5,0x17,0x24,0x01,0xCB,0x28,0xB7,0xA2,0x54,0xDF,0x52,
		0x89,0x30,0x89,0xE7,0x07,0xF0,0xA9,0x9B,0x00,0x67,0x74,0xAA,0xB0,0xD0,0x2B,0x01,
		0x49,0xF4,0x60,0xA4,0x99,0xC7,0x0A,0xA9,0x6B,0x31,0x7E,0x95,0xBE,0x3F,0x8B,0x7A,
		0x4C,0x5B,0x69,0x37,0x69,0x22,0xDD,0x28,0x40,0x17,0xE0,0xBD,0xF9,0xB1,0x23,0x21,
		0xB1,0x23,0x8A,0x26,0xAE,0x6B,0x6D,0x58,0xD3,0x63,0x79,0x8E,0x81,0x4A,0x2B,0x13,
		0xCD,0xF0,0x7D,0xC7,0x36,0x59,0x85,0x51,0x9B,0x57,0x66,0xB3,0x59,0x05,0x53,0x7E,
		0x05,0xC6,0x15,0xBB,0x65,0xDA,0x23,0xB3,0xF2,0x8B,0x89,0xA2,0xBC,0x0C,0x2F,0x21,
		0xD6,0x50,0xA9,0x28,0x23,0x58,0x4E,0xC6,0xBB,0xE2,0x8A,0x48,0xAB,0x40,0x95,0xF2,
		0xBF,0xFF,0x3E,0x35,0x6C,0x32,0x50,0xED,0xA8,0x38,0x95,0x86,0x31,0x06,0x98,0x74,
		0xB2,0xAC,0x41,0xED,0x99,0xE0,0x4C,0xCA,0x98,0xC9,0x97,0x1B,0x65,0x99,0xC8,0xE0,
		0x95,0x88,0xD1,0x22,0x8C,0xF8,0xD3,0x70,0xAC,0x7F,0x04,0xE0,0x06,0x22,0x70,0xE4,
		0x86,0xA0,0xC1,0xB1,0x1B,0x82,0x88,0xA4,0xD1,0x90,0x1F,0x1E,0x94,0xA5,0x3D,0x4F,
		0xCE,0x3B,0xC5,0xBB,0x8A,0x5D,0xF8,0x94,0x8F,0x5D,0x6A,0xE1,0xC3,0xF3,0x9B,0x80,
		0x0E,0xB9,0x73,0x64,0xD3,0x1D,0xCE,0x5D,0x65,0x6A,0x9E,0xC7,0x0F,0x6C,0x87,0xF6,
		0xC5,0x92,0x49,0x17,0x6B,0x34,0xB4,0x2C,0x4A,0xCB,0x84,0xAF,0x1E,0x18,0x43,0x48,
		0x1C,0xE4,0x88,0xAE,0x86,0xC3,0xC2,0x7F,0x3E,0xDC,0x10,0x62,0x38,0x04,0x67,0xAC,
		0x16,0xB4,0xC1,0x14,0x2A,0x5F,0x97,0xD9,0x85,0xEC,0xA9,0xDA,0xAE,0x4B,0x83,0xA3,
		0xDE,0xD9,0x29,0xC0,0x14,0xAE,0x05,0xF8,0x29,0xEC,0x47,0x15,0x10,0x6A,0x44,0xE5,
		0x90,0xC5,0x2A,0x18,0x1C,0x98,0x4E,0x7B,0x6C,0x3B,0x96,0x2E,0xB0,0x81,0x12,0x1F,
		0x88,0x6F,0x54,0x89,0x61,0xD8,0x67,0x3E,0x0A,0xFB,0x58,0x15,0xB9,0x55,0x1B,0xC2,
		0x54,0x34,0xD5,0x3C,0x99,0x3A,0x91,0xED,0x3B,0x54,0x1A,0x92,0xEA,0x71,0x8D,0x09,
		0x43,0xC0,0x6D,0x98,0x04,0x82,0x6D,0x35,0x35,0xBE,0x7A,0x14,0x8B,0x54,0xED,0x31,
		0x1E,0x19,0x4E,0x31,0x21,0x0C,0xDF,0x88,0xC6,0x39,0x16,0x59,0x2B,0x50,0x86,0x0E,
		0x49,0x1B,0x5B,0x34,0xD9,0x15,0x33,0x8F,0x0B,0xFE,0xB8,0x35,0xE6,0x30,0x0D,0x0B,
		0x75,0xB2,0x01,0x93,0x7A,0x63,0x38,0x53,0xD6,0x5B,0x7B,0x94,0x41,0x44,0x49,0xF2,
		0xC7,0xD5,0x93,0xD7,0x95,0xE8,0x48,0xAB,0x8A,0x9B,0xC4,0xA3,0x4A,0xE2,0x68,0xC9,
		0x11,0x26,0x77,0xA8,0x82,0xFC,0x08,0xA2,0x23,0x3D,0x42,0x9B,0x99,0xDF,0xA3,0x23,
		0x70,0x34,0x65,0x05,0xF8,0xC4,0x24,0x03,0x3F,0x39,0x49,0xC7,0xBD,0x28,0x6D,0x01,
		0xA1,0x71,0x0B,0xAE,0xC8,0x2E,0x2D,0x09,0xC7,0x45,0x0F,0x3F,0xB1,0xF4,0x55,0x27,
		0xCB,0xF5,0xC6,0xC0,0xA1,0x56,0x5C,0x83,0xA9,0x2E,0xD8,0xDC,0x16,0x78,0xEB,0xF5,
		0xC7,0xD8,0x97,0x08,0x6A,0x02,0xA1,0x71,0x4F,0x97,0x8B,0x88,0x75,0xE5,0x85,0x44,
		0xBA,0xD0,0x0C,0x6F,0x8F,0x0D,0x23,0x30,0xC5,0x30,0xB1,0x7B,0x63,0xC8,0xBB,0xF4,
		0xC2,0xE8,0x32,0xF0,0x4C,0x1A,0x86,0x32,0x41,0xCA,0xEA,0x2B,0x59,0x7B,0xC5,0xE1,
		0x58,0xF4,0x92,0xE7,0x38,0xB5,0xBA,0xCC,0x1D,0x86,0x43,0x21,0x6E,0x6A,0x9D,0xEB,
		0xEB,0x8B,0xEB,0x77,0x5A,0x89,0xC3,0x94,0xB4,0xF7,0x0D,0xA2,0x95,0x32,0x25,0x5C,
		0xBA,0x46,0x60,0x61,0xA4,0x2A,0x9C,0xF9,0x12,0xCC,0x51,0x67,0x66,0x7C,0x8F,0xF6,
		0xCB,0x4B,0x73,0xF8,0xCD,0xC4,0x23,0x0E,0xC6,0x38,0x12,0x4A,0x17,0xF5,0x12,0x0F,
		0x69,0x71,0xF9,0x24,0xE2,0x78,0xDC,0x2D,0x44,0xA2,0x73,0x97,0x81,0xD8,0xCD,0xFB,
		0xE3,0x88,0x58,0x35,0x2C,0xE8,0xBC,0xEC,0xF7,0x30,0xB9,0xD5,0xD0,0x2E,0xE0,0x83,
		0x44,0x2E,0xAF,0x90,0x56,0xCC,0xA4,0xB2,0x61,0xCF,0x35,0x21,0x2F,0xDE,0x25,0x56,
		0x0E,0x3A,0xE5,0xDC,0xC6,0x13,0xC8,0xCF,0x93,0x88,0x50,0xCA,0x36,0x27,0xFA,0x81,
		0x93,0xEF,0x57,0x0D,0x4D,0x70,0x6B,0xB1,0x8A,0x13,0x66,0xF1,0xE8,0xB8,0x8A,0x36,
		0x9D,0x53,0x13,0x8A,0xAA,0x89,0x01,0x52,0x28,0x20,0x9E,0x78,0x28,0xF0,0x59,0xE0,
		0x8B,0x0A,0xCC,0xAB,0xE8,0x3D,0x49,0x6B,0xF8,0x12,0xC7,0x8D,0xA5,0x94,0x94,0x45,
		0xF1,0xD0,0x8A,0x53,0x08,0x53,0xA5,0xBC,0x4C,0x73,0xA9,0xD5,0xCB,0xC3,0x17,0x6B,
		0x9D,0x85,0xF2,0x32,0x49,0x8C,0xF6,0xAE,0xFE,0xBE,0x9C,0x10,0xEB,0x72,0x73,0xB8,
		0xE8,0x7E,0xBE,0x3D,0x70,0x06,0x79,0x30,0x47,0xF1,0x34,0xD1,0x33,0x53,0xC1,0x5D,
		0x80,0x29,0x10,0xA5,0xD9,0x2C,0x81,0x2E,0x4B,0x34,0x31,0x09,0x95,0x7B,0x14,0x11,
		0x05,0x26,0xC9,0x70,0xFB,0x50,0x89,0xCB,0x73,0x79,0x59,0xFB,0xB9,0x2A,0x48,0xC8,
		0x3E,0x13,0x60,0x9B,0x19,0x49,0xB2,0x84,0xA4,0xE0,0xC0,0xD9,0x01,0xA4,0xA6,0xBF,
		0x6A,0xFC,0x56,0xD5,0xDF,0xFD,0x5E,0x7D,0x5F,0x2A,0x16,0x5F,0x7D,0x5B,0x63,0x26,
		0xA8,0xC2,0xDE,0xBB,0xB5,0xF7,0x0A,0x05,0x5B,0x18,0x4E,0xF5,0x87,0xE2,0x6F,0x55,
		0x86,0xB3,0x14,0x41,0x30,0x2D,0x36,0x8C,0x38,0xDA,0x73,0xE0,0x36,0xDE,0x25,0x92,
		0x86,0x93,0x64,0x56,0x71,0xF7,0x90,0xF0,0x26,0x95,0x26,0x4B,0x12,0xB6,0xA4,0x55,
		0xB5,0x12,0x70,0x9F,0xDF,0x26,0x11,0xDE,0xDB,0x0B,0x68,0x1C,0x66,0x73,0x05,0x90,
		0xDC,0xCD,0xE4,0xEA,0x12,0x4F,0xA0,0x28,0xDE,0xCD,0xFC,0xE6,0xDA,0xF3,0x64,0x9D,
		0x62,0xD9,0xF7,0xAC,0x2F,0x6E,0xAF,0x9A,0x8E,0x11,0x86,0xE7,0x22,0xB5,0xC3,0x56,
		0xFC,0xA3,0xE9,0x5B,0x62,0x65,0xC2,0x3A,0x5A,0xC3,0xBE,0x37,0x73,0xE1,0x5D,0xA4,
		0xF8,0x8F,0x72,0xB9,0x5A,0xB0,0x44,0x7B,0x85,0xED,0xEF,0x15,0x60,0xD9,0x1A,0x98,
		0x30,0x14,0x37,0xEF,0x57,0xB2,0x17,0x16,0x61,0x88,0xC7,0x44,0x90,0x23,0x7D,0xC9,
		0x27,0x25,0x28,0x2B,0x85,0x5B,0x43,0x2E,0x6A,0x1C,0x27,0x9B,0x55,0x85,0xA9,0x4A,
		0x20,0x61,0xA5,0x72,0x0C,0xA2,0x50,0x3E,0xB1,0x55,0x20,0xE5,0xFB,0xC8,0x6A,0x5B,
		0x01,0xA5,0xF3,0xE4,0x8E,0x3D,0x19,0x11,0x98,0x6D,0x53,0xCC,0x15,0x5F,0x9A,0x05,
		0x36,0xCF,0x52,0xE1,0xFB,0x3F,0xCC,0x01,0x3C,0xEC,0x83,0x7A,0xAB,0xAE,0x37,0xD3,
		0x8B,0xA5,0x82,0x46,0xD8,0x18,0x4D,0x6D,0x62,0xCC,0xC5,0xD9,0x2F,0xEE,0x6E,0x6E,
		0x13,0x78,0x16,0x1B,0xFD,0xBC,0x41,0x1E,0xA4,0x1A,0xD3,0xC8,0xDB,0x8E,0x37,0x53,
		0xF9,0x19,0xA0,0x46,0x6A,0xBB,0x85,0xBC,0x18,0x41,0x2C,0x0E,0x56,0xD5,0x67,0xD4,
		0x9D,0x82,0x6A,0xCB,0x24,0x2D,0x4B,0x3C,0x8D,0x95,0x26,0x32,0x75,0x62,0xD9,0x39,
		0x29,0xE5,0x03,0x4C,0x32,0xD8,0x18,0x8C,0xB2,0x40,0x72,0x6C,0x89,0x84,0x50,0x29,
		0x34,0x0E,0xA7,0x16,0x16,0x76,0x78,0x8C,0x87,0x8C,0xC8,0x0D,0xD7,0x68,0xEC,0x3C,
		0x1C,0x32,0x25,0x44,0x6D,0x07,0xCF,0xA0,0x76,0x85,0x05,0xEC,0xD4,0xD8,0x93,0xB6,
		0x9D,0x40,0x78,0x24,0xD8,0xF3,0x9F,0x9C,0x09,0xA5,0x77,0x75,0xE2,0x2D,0xC4,0x81,
		0x67,0x2D,0x12,0xDB,0x8F,0xE1,0xDE,0xA2,0x2D,0x5D,0x43,0x2F,0x98,0x93,0x42,0x51,
		0xC6,0xA9,0x5D,0x8C,0x52,0x69,0xB4,0x80,0x4E,0xE0,0x94,0x8C,0xCF,0x97,0x3A,0x6A,
		0xB3,0x20,0xB9,0x90,0xE6,0x73,0xC7,0x9A,0xE4,0xB3,0xA6,0x8E,0xF7,0x33,0xBE,0x6C,
		0xDE,0xE9,0xF4,0xFE,0x3F,0x4D,0x3D,0x36,0x17,0xE9,0xE9,0x9F,0x36,0x18,0x09,0x29,
		0xFA,0xE5,0xE3,0x32,0xE1,0xC8,0xA0,0x23,0x05,0x94,0xC6,0x78,0x54,0x40,0xF9,0xA0,
		0x05,0xE3,0xFD,0x07,0xA2,0x79,0xD8,0x56,0x22,0xA1,0xCC,0x27,0x9F,0x20,0x11,0x0E,
		0x28,0xBA,0xC5,0xD3,0x52,0x79,0x40,0xD4,0x8E,0xA8,0x94,0x46,0x0A,0xFC,0x51,0x61,
		0xB0,0xD2,0x82,0x23,0xFF,0xD7,0xA2,0x48,0xC7,0xA9,0x70,0xEC,0xCD,0xD8,0xAE,0xCF,
		0x3C,0xE2,0xA1,0xEA,0x1E,0x48,0xF0,0x68,0x05,0x85,0x54,0x88,0xD1,0x3D,0x11,0xB5,
		0x20,0x9B,0x71,0xE0,0x5C,0x7A,0x13,0x4B,0x1B,0x38,0xDF,0x70,0x9C,0x9E,0x07,0xFB,
		0x72,0x19,0x7E,0x54,0xCF,0xAB,0x95,0x3D,0x0D,0xD5,0x23,0x3E,0xC8,0xA9,0x2B,0xA0,
		0xEC,0x58,0xA7,0x70,0xE6,0x98,0x1F,0x4C,0x75,0xBD,0x5A,0xD9,0xF5,0xE9,0xE1,0x10,
		0x4A,0x8D,0xE7,0xF0,0x91,0x98,0x80,0xAA,0xA0,0x59,0x78,0xFB,0x95,0x94,0xC8,0x12,
		0x50,0x3C,0x98,0xCC,0x40,0xDE,0x08,0x48,0x35,0x07,0x25,0xCB,0x74,0x49,0x80,0x8A,
		0xCD,0x02,0xE4,0x72,0x61,0x81,0xE5,0x9E,0x55,0x70,0x82,0x53,0x7C,0x83,0x61,0x0B,
		0xFE,0x7C,0x15,0x20,0xE7,0x13,0x5E,0x93,0x60,0xE9,0xD4,0xA5,0x70,0x44,0x0A,0x63,
		0x30,0x69,0xA1,0xA6,0x5C,0x47,0x21,0x24,0xEC,0x82,0x25,0x57,0x18,0x2A,0xC1,0x81,
		0x37,0x1C,0xC2,0xFE,0xE3,0x2F,0xD8,0xA1,0xE0,0x78,0xD2,0x5D,0x06,0x78,0xC4,0x7A,
		0x72,0xF3,0xF0,0xDC,0x89,0x07,0x37,0x84,0xBC,0x69,0x94,0x71,0x33,0xE5,0x4E,0x34,
		0x56,0xD6,0x0E,0x17,0xC9,0x5F,0x7F,0x11,0xD5,0xB6,0x4B,0x74,0x2E,0x27,0xCE,0x63,
		0x31,0xD9,0x7B,0x03,0x18,0x20,0x9C,0x54,0x13,0x22,0x30,0x81,0x09,0x5E,0x21,0xA3,
		0xFC,0xAB,0x11,0x5E,0xCD,0x55,0x45,0xFA,0xAC,0x2F,0xE7,0x8B,0xD7,0x53,0x6A,0x0C,
		0x75,0xE6,0xC3,0xAC,0x2A,0x2E,0x13,0xDC,0xAD,0x48,0x56,0x1F,0xD0,0x9F,0x8D,0x82,
		0xAC,0x91,0x6F,0x52,0xA5,0xEB,0x7C,0xC7,0x18,0x50,0x47,0x40,0x63,0x9C,0x13,0xF0,
		0xBC,0x5D,0x05,0x45,0x81,0xA7,0x68,0xA5,0xCC,0x82,0x01,0x27,0x06,0x7A,0x34,0x3A,
		0x66,0x32,0xB7,0x60,0x0C,0xCC,0xF5,0xD4,0x9B,0xD1,0xA0,0x0D,0x17,0xA5,0x60,0xE3,
		0x73,0x65,0xE2,0x95,0xF0,0x7C,0x34,0x55,0x0E,0xA8,0x52,0xE8,0x69,0x54,0x13,0x65,
		0x8C,0x04,0xCE,0xEA,0x20,0x3D,0x1F,0xAE,0x27,0xD0,0xE3,0x74,0xF9,0xAC,0x28,0x9C,
		0x02,0xB2,0xA0,0xB0,0xCF,0xB7,0xF0,0x60,0x1D,0x1B,0xF7,0xE0,0xDE,0x38,0x2C,0x33,
		0x7D,0x63,0xC4,0x76,0xDB,0xE3,0xAE,0x7C,0x80,0x2E,0x4B,0x45,0xA5,0xB6,0xFE,0x1F,
		0x92,0x67,0xA2,0x0C,0x22,0x6F,0x1F,0xB0,0xDA,0xC5,0x4D,0x57,0x30,0x8C,0x20,0x19,
		0xE4,0x23,0x3A,0x09,0x05,0x8F,0xEA,0xDC,0x96,0xB5,0x96,0x49,0xC1,0x65,0x6B,0x88,
		0xED,0xC7,0xEB,0x56,0x4E,0xF0,0xB1,0xDA,0xD5,0x01,0x03,0xE2,0x23,0x09,0xBB,0x8F,
		0x57,0xF0,0x3A,0xDB,0xD9,0x85,0xDE,0xFA,0x36,0xBC,0xED,0x00,0x24,0xBC,0x97,0x4A,
		0x49,0x53,0x60,0x78,0xEF,0xEC,0xF7,0x62,0x9B,0xB4,0x29,0x76,0x79,0xD5,0xF9,0x55,
		0x3E,0x81,0x2F,0x75,0x85,0x98,0x0E,0x4E,0x2A,0xF1,0x88,0xCE,0xA1,0x36,0xD2,0x73,
		0x62,0xCB,0xD6,0x90,0x1F,0x9F,0xB6,0x02,0x66,0xB0,0xF9,0xC5,0x2C,0x22,0xAD,0x58,
		0xCB,0x86,0x33,0x1B,0x2E,0x02,0xE8,0x62,0x2F,0x4E,0xFC,0x98,0x60,0x97,0xB0,0x4E,
		0x84,0x9D,0xC9,0x46,0xA6,0x0D,0xAE,0x1A,0x2F,0x6B,0x73,0x72,0x8D,0xB7,0x61,0xAE,
		0xC9,0x0C,0x97,0xB5,0xDD,0xE7,0xDA,0xE6,0x4B,0xC9,0x79,0x6E,0x1E,0xD9,0x73,0x87,
		0xB9,0x46,0xB8,0x81,0x92,0xE7,0x30,0x8F,0x9A,0x6F,0xF1,0xFD,0x5C,0x9B,0x3F,0xCE,
		0xB7,0xC1,0xB5,0xED,0x25,0x63,0x7A,0x79,0x5C,0x8B,0x8A,0x36,0xE5,0x23,0xCC,0x79,
		0x32,0xEE,0x9C,0x70,0x21,0x7E,0x5A,0x90,0xF7,0x21,0x11,0x41,0xFE,0x5F,0x6B,0x80,
		0xEB,0xA2,0x79,0xAD,0xF8,0xF9,0xB6,0x91,0x9D,0xD7,0xC9,0x60,0xE2,0xE7,0x65,0x66,
		0x7A,0x5F,0x29,0x1F,0x7E,0x76,0xA5,0x76,0x0B,0x13,0x01,0x50,0x89,0x49,0x6D,0x82,
		0xA4,0x52,0x9C,0xDA,0x19,0xC1,0xC7,0x73,0xCF,0x62,0x9B,0x4D,0xE0,0x8F,0xB2,0x4E,
		0x3E,0xA4,0x51,0x0C,0x84,0xFB,0x74,0xF2,0x82,0x4B,0x52,0x31,0x58,0x75,0xB7,0x07,
		0x89,0xB1,0xB2,0x97,0x1A,0x1E,0xDB,0xF3,0xCE,0xEF,0x7A,0xB3,0x8E,0x2F,0xDA,0xF8,
		0xCE,0x1C,0xE3,0x7E,0xD9,0xAC,0x57,0xCF,0x3C,0xA3,0x91,0x9C,0x7D,0xAA,0x75,0x45,
		0xBC,0xA3,0xF6,0xF5,0xDB,0xE8,0x82,0xD2,0xF2,0xED,0xD3,0xFD,0xCE,0x69,0xA7,0xD7,
		0x59,0xBA,0x81,0x2A,0x94,0x12,0xA3,0x17,0xF3,0xFE,0x04,0x25,0x12,0x40,0xC8,0x8C,
		0xF4,0xF5,0xEA,0x6B,0xA6,0x0E,0x2D,0xC8,0x8A,0x9C,0xF7,0xBA,0x7B,0x71,0x5E,0x85,
		0x26,0x48,0xF9,0x29,0x7A,0x7C,0x82,0x79,0xB1,0x4A,0x65,0x64,0x19,0xCD,0x4B,0xE3,
		0xB0,0x93,0xDA,0x4B,0xFE,0xC8,0x52,0x53,0x83,0xC1,0xC3,0x49,0xF3,0x92,0xE9,0xC6,
		0x42,0x59,0xAD,0x71,0x29,0x0C,0xE6,0x65,0xCB,0xF6,0x2B,0xD9,0x57,0x4A,0xE2,0x83,
		0x5B,0xAE,0xAF,0x32,0xFB,0x16,0x4A,0x19,0x70,0xA0,0x11,0xDE,0x16,0x3E,0x18,0x42,
		0x46,0xF2,0xA7,0x00,0x71,0x00,0x77,0x6E,0x0F,0xB8,0x82,0x96,0x99,0x0C,0xA3,0x82,
		0xEB,0x5D,0xF6,0xDD,0x19,0xED,0x8B,0x77,0x7F,0xBF,0x32,0xE2,0xB1,0xFC,0x97,0xE5,
		0x85,0x0C,0x60,0xF6,0x77,0xDB,0xF9,0xA4,0xF0,0x54,0x50,0x4C,0x5A,0x4F,0x85,0x85,
		0xCC,0x1A,0x83,0xF2,0x3C,0xBB,0x0A,0xF2,0x36,0x4C,0x00,0xDE,0x1A,0xF7,0x06,0xBF,
		0x02,0xB9,0x92,0x70,0x02,0xDA,0xFC,0x03,0x52,0xDF,0x4A,0x6E,0x9F,0x0C,0xE8,0xFB,
		0x4F,0x06,0x5D,0x52,0x07,0x84,0xD0,0xF8,0xB4,0xF4,0x1B,0x3D,0xB5,0x3A,0x10,0x65,
		0x44,0xBE,0x38,0x20,0x92,0x4D,0x50,0xFA,0xEA,0x64,0xC3,0x80,0xA4,0x9B,0x28,0x53,
		0x62,0x76,0x9E,0xBB,0x3E,0x2A,0x5A,0xC1,0x77,0xD8,0xAD,0xDF,0x2A,0x57,0x55,0x0A,
		0x91,0xD1,0xCB,0x22,0x72,0x9B,0x13,0x5D,0x2B,0xBD,0xA3,0x98,0x67,0x83,0xBB,0x58,
		0x8E,0x1C,0x6B,0x8E,0x4F,0xF5,0x27,0xE0,0xA6,0x59,0x2E,0xF0,0x6D,0x05,0x17,0xC9,
		0x0B,0x01,0x70,0x72,0x21,0xE7,0xCF,0xB0,0x05,0xF3,0xB1,0x6A,0x8B,0x69,0x68,0xE5,
		0xA8,0x0F,0xE2,0xC4,0x59,0xAC,0x8F,0x00,0x02,0x2E,0xE1,0x57,0xF1,0x21,0x3E,0x6C,
		0xD8,0xFE,0x87,0x0F,0x8B,0x3F,0x2F,0x5B,0x3E,0x2C,0x1B,0x3D,0x0E,0x1E,0x90,0x3E,
		0x30,0x89,0xE0,0xEC,0xBE,0x26,0x87,0xF1,0x43,0x41,0x06,0xBB,0xE7,0x78,0x03,0xFD,
		0x1D,0x36,0xBC,0x87,0xD0,0xCC,0x08,0x37,0xD8,0x2B,0x5C,0x0F,0x8D,0xB3,0xDC,0x3F,
		0x78,0x48,0xF8,0x90,0x4F,0x21,0x9F,0x21,0x5C,0x92,0x3C,0x60,0xFA,0xE4,0xFD,0xCA,
		0xF8,0x7C,0xE5,0x93,0x37,0x15,0x57,0xA6,0x4B,0xB5,0x92,0x0E,0x29,0xBF,0x5F,0xA2,
		0xE7,0x54,0x26,0xCF,0xF6,0x57,0x62,0x68,0x98,0xB1,0x52,0x5D,0x26,0xAC,0x46,0x03,
		0x3C,0xBB,0xE4,0x89,0x7C,0xA5,0x64,0x74,0x70,0x18,0x58,0xBE,0xB3,0xD9,0x3F,0x21,
		0xB1,0xE2,0x87,0x06,0xE1,0x38,0x90,0x5A,0x97,0xCB,0x57,0xBA,0xAB,0x72,0x9C,0xE7,
		0xCD,0x38,0xD2,0x17,0x25,0x87,0xE0,0xEC,0x5D,0xC0,0x61,0xDC,0xE1,0x4C,0xCE,0x3C,
		0x0B,0x26,0x02,0xCE,0x52,0x9B,0xC0,0x27,0xE1,0x7F,0x8C,0x94,0x9A,0x6D,0x0F,0xBC,
		0x5B,0x00,0xA1,0xA3,0x23,0x14,0x7B,0x4F,0x82,0x7D,0xCB,0xC4,0xDE,0x65,0xFB,0x7E,
		0xFC,0x32,0xDB,0x31,0xBF,0x96,0xBF,0x88,0x81,0xF2,0x83,0xF7,0x43,0xDA,0x85,0x2B,
		0xE2,0x3D,0xF8,0xA6,0x83,0xCE,0x16,0xF8,0xAB,0x61,0x11,0xA8,0x0B,0x8B,0x57,0x7D,
		0x3D,0xC3,0xDC,0x11,0x6C,0x4D,0x39,0xF0,0x1B,0xF1,0x0B,0xE8,0xA7,0x10,0x5A,0x14,
		0x2D,0x05,0xD6,0x85,0xBD,0x85,0xCB,0x00,0xBE,0xE4,0x76,0xC6,0xCE,0xB7,0x74,0xAC,
		0xE9,0x53,0x30,0x26,0xBF,0x3C,0xC0,0x54,0x20,0x6F,0x15,0x48,0xF5,0xA0,0xAB,0x34,
		0x48,0xEA,0x8E,0x41,0x59,0x74,0x0D,0x20,0xF2,0xC2,0x26,0x42,0x83,0x7C,0x9C,0xD9,
		0x2E,0xC0,0xB4,0xA3,0xC0,0xA9,0x74,0x0B,0x65,0xFC,0x1A,0x9E,0x09,0xCF,0x02,0x1E,
		0x9A,0x1E,0x24,0x0A,0x96,0x0D,0x89,0x1B,0x78,0x7C,0xFC,0xC4,0xBD,0xD5,0x74,0x78,
		0x28,0xC7,0x02,0x91,0x66,0x07,0xF7,0x4A,0x35,0x1E,0x2A,0x62,0xF3,0x8B,0x69,0xE3,
		0xB5,0xC0,0x0B,0x17,0xBF,0x76,0xCA,0x26,0x88,0x16,0xF1,0x99,0x93,0x84,0xF8,0xEC,
		0x3D,0x69,0x92,0x6F,0xF3,0x93,0x7C,0xFB,0x19,0x93,0x5C,0xA2,0x66,0x7C,0xE8,0xC3,
		0xF0,0x67,0x86,0x0B,0xEB,0xCE,0x00,0x1A,0x90,0x19,0xA6,0xAA,0x7F,0x65,0xAA,0x01,
		0x7D,0xE2,0x54,0xBB,0x78,0x01,0x71,0xC9,0x84,0x79,0xC7,0x3F,0x3F,0xED,0x80,0x7E,
		0xF1,0xB4,0xC5,0xC6,0x60,0x62,0x51,0x1A,0x27,0x99,0xAF,0x3B,0xDE,0x96,0xBD,0xAC,
		0x4F,0x16,0x1E,0x71,0xE3,0x93,0xEB,0x89,0x27,0xE4,0xFB,0xAF,0x0B,0x5B,0x6A,0x6D,
		0xA1,0x6A,0x18,0xB5,0xAE,0x10,0xF4,0x52,0x5F,0xFC,0xF0,0xDC,0x3D,0xD8,0x8A,0x3E,
		0xC5,0xA3,0x3A,0x79,0xF3,0x01,0x7F,0x43,0xFC,0xFA,0x02,0xA0,0xCA,0xCB,0x8E,0x41,
		0x84,0x2D,0x60,0x15,0x70,0x04,0x08,0x62,0xE6,0x57,0x85,0xAB,0x63,0xD8,0x09,0x00,
		0x7D,0x01,0xBB,0xB0,0x4F,0x58,0x7B,0xF7,0xEA,0xFB,0xF7,0x25,0x58,0x22,0x34,0xE1,
		0xAD,0xD8,0x84,0x0F,0xDF,0xBF,0xFF,0xA1,0x58,0x1B,0xD9,0xE5,0xC4,0x85,0xDB,0x32,
		0xDC,0xF9,0x2E,0x33,0x99,0x82,0x5D,0x20,0x6D,0x7E,0x0B,0x1C,0x68,0xB3,0xC6,0x6D,
		0xD4,0x67,0xA6,0x98,0x49,0xAD,0x7D,0xE2,0xDC,0x57,0x66,0xC8,0xEC,0xCA,0x8A,0xF8,
		0x88,0x42,0x10,0x1F,0x65,0x80,0x56,0x37,0x35,0x90,0x8C,0xBA,0xF2,0xA1,0x61,0x93,
		0x26,0x83,0x0B,0x02,0x2E,0xBB,0x1F,0xAB,0x4D,0xC5,0x27,0x2D,0x73,0x45,0x76,0x3B,
		0x59,0xDD,0xF1,0x11,0x97,0x56,0xA8,0xBC,0x2B,0x5F,0xA6,0x6A,0x79,0x93,0xD5,0x63,
		0x50,0xA0,0x0E,0x72,0xDF,0xA9,0xF1,0xC5,0x44,0xFC,0xC5,0x2A,0x02,0xF7,0x55,0x0B,
		0x20,0xE6,0x02,0xBF,0xF8,0x80,0x6A,0x0E,0x1B,0xB5,0x9A,0x69,0xB9,0xB7,0x21,0x64,
		0x5E,0x6F,0x6A,0x0D,0x1D,0x58,0x6D,0xA2,0xE7,0xD7,0xF0,0xB6,0x7B,0xCD,0xB1,0x07,
		0x61,0x0D,0x6D,0x64,0xAD,0xBA,0x5E,0xDD,0xC2,0x4F,0x55,0x58,0xB0,0x24,0xFF,0xFE,
		0x40,0x62,0xC9,0x42,0xCC,0x31,0x2E,0x92,0x23,0xB8,0x12,0x1B,0x0D,0x2B,0x2F,0xB5,
		0xDD,0xDC,0xF8,0xBB,0x6C,0xCE,0x44,0x7E,0xB7,0x2B,0xAE,0x30,0x49,0x76,0xCE,0xCA,
		0xCF,0x04,0xE3,0xCD,0x55,0x5F,0x26,0x2A,0x70,0x00,0xB9,0xEB,0xCC,0x9F,0xE4,0x2D,
		0x16,0xC9,0x70,0xAA,0xCF,0x08,0x17,0xAE,0x99,0xBA,0x2A,0xAE,0x68,0xE3,0xDF,0x5F,
		0x48,0x6D,0x0D,0x73,0x1C,0xEE,0x03,0x49,0x79,0xD6,0xC4,0x5F,0x6A,0xC0,0x23,0x18,
		0xE2,0x89,0x4B,0x32,0x49,0x37,0xD8,0xD6,0x70,0xB2,0x3B,0x70,0x22,0x83,0x42,0x97,
		0x5F,0x0B,0x21,0xEC,0xF0,0x4E,0x3E,0xA2,0x84,0x00,0x20,0x05,0x38,0xF5,0x57,0xF6,
		0x71,0x83,0xCB,0xB7,0x4B,0x6B,0xCE,0xF7,0xC8,0x7A,0x30,0xBE,0xBB,0x92,0xFA,0x6A,
		0x5F,0x12,0xC1,0x66,0xF7,0x7F,0x10,0x27,0x7D,0x23,0x48,0x20,0x16,0x52,0x88,0x05,
		0x40,0xE4,0x08,0x28,0x09,0x14,0x01,0xBE,0xF3,0xBF,0x69,0xF1,0x37,0xF3,0xFB,0x60,
		0xCB,0x46,0x43,0x00,0x00
    };

#define SPIFFS_MAXLENGTH_FILEPATH 32
const char *excludeListFile = "/.exclude.files";

typedef struct ExcludeListS {
    char *item;
    ExcludeListS *next;
} ExcludeList;

static ExcludeList *excludes = NULL;

static bool matchWild(const char *pattern, const char *testee) {
  const char *nxPat = NULL, *nxTst = NULL;

  while (*testee) {
    if (( *pattern == '?' ) || (*pattern == *testee)){
      pattern++;testee++;
      continue;
    }
    if (*pattern=='*'){
      nxPat=pattern++; nxTst=testee;
      continue;
    }
    if (nxPat){ 
      pattern = nxPat+1; testee=++nxTst;
      continue;
    }
    return false;
  }
  while (*pattern=='*'){pattern++;}  
  return (*pattern == 0);
}

static bool addExclude(const char *item){
    size_t len = strlen(item);
    if(!len){
        return false;
    }
    ExcludeList *e = (ExcludeList *)malloc(sizeof(ExcludeList));
    if(!e){
        return false;
    }
    e->item = (char *)malloc(len+1);
    if(!e->item){
        free(e);
        return false;
    }
    memcpy(e->item, item, len+1);
    e->next = excludes;
    excludes = e;
    return true;
}

static void loadExcludeList(fs::FS &_fs, const char *filename){
    static char linebuf[SPIFFS_MAXLENGTH_FILEPATH];
    fs::File excludeFile=_fs.open(filename, "r");
    if(!excludeFile){
        //addExclude("/*.js.gz");
        return;
    }
#ifdef ESP32
    if(excludeFile.isDirectory()){
      excludeFile.close();
      return;
    }
#endif
    if (excludeFile.size() > 0){
      uint8_t idx;
      bool isOverflowed = false;
      while (excludeFile.available()){
        linebuf[0] = '\0';
        idx = 0;
        int lastChar;
        do {
          lastChar = excludeFile.read();
          if(lastChar != '\r'){
            linebuf[idx++] = (char) lastChar;
          }
        } while ((lastChar >= 0) && (lastChar != '\n') && (idx < SPIFFS_MAXLENGTH_FILEPATH));

        if(isOverflowed){
          isOverflowed = (lastChar != '\n');
          continue;
        }
        isOverflowed = (idx >= SPIFFS_MAXLENGTH_FILEPATH);
        linebuf[idx-1] = '\0';
        if(!addExclude(linebuf)){
            excludeFile.close();
            return;
        }
      }
    }
    excludeFile.close();
}

static bool isExcluded(fs::FS &_fs, const char *filename) {
  if(excludes == NULL){
      loadExcludeList(_fs, excludeListFile);
  }
  ExcludeList *e = excludes;
  while(e){
    if (matchWild(e->item, filename)){
      return true;
    }
    e = e->next;
  }
  return false;
}

// WEB HANDLER IMPLEMENTATION

#ifdef ESP32
SPIFFSEditor::SPIFFSEditor(const fs::FS& fs, const String& username, const String& password)
#else
SPIFFSEditor::SPIFFSEditor(const String& username, const String& password, const fs::FS& fs)
#endif
:_fs(fs)
,_username(username)
,_password(password)
,_authenticated(false)
,_startTime(0)
{}

bool SPIFFSEditor::canHandle(AsyncWebServerRequest *request){
  if(request->url().equalsIgnoreCase("/edit")){
    if(request->method() == HTTP_GET){
      if(request->hasParam("list"))
        return true;
      if(request->hasParam("edit")){
        request->_tempFile = _fs.open(request->arg("edit"), "r");
        if(!request->_tempFile){
          return false;
        }
#ifdef ESP32
        if(request->_tempFile.isDirectory()){
          request->_tempFile.close();
          return false;
        }
#endif
      }
      if(request->hasParam("download")){
        request->_tempFile = _fs.open(request->arg("download"), "r");
        if(!request->_tempFile){
          return false;
        }
#ifdef ESP32
        if(request->_tempFile.isDirectory()){
          request->_tempFile.close();
          return false;
        }
#endif
      }
      request->addInterestingHeader("If-Modified-Since");
      return true;
    }
    else if(request->method() == HTTP_POST)
      return true;
    else if(request->method() == HTTP_DELETE)
      return true;
    else if(request->method() == HTTP_PUT)
      return true;

  }
  return false;
}


void SPIFFSEditor::handleRequest(AsyncWebServerRequest *request){
  if(_username.length() && _password.length() && !request->authenticate(_username.c_str(), _password.c_str()))
    return request->requestAuthentication();

  if(request->method() == HTTP_GET){
    if(request->hasParam("list")){
      String path = request->getParam("list")->value();
#ifdef ESP32
      File dir = _fs.open(path);
#else
      Dir dir = _fs.openDir(path);
#endif
      path = String();
      String output = "[";
#ifdef ESP32
      File entry = dir.openNextFile();
      while(entry){
#else
      while(dir.next()){
        fs::File entry = dir.openFile("r");
#endif
        if (isExcluded(_fs, entry.name())) {
#ifdef ESP32
            entry = dir.openNextFile();
#endif
            continue;
        }
        if (output != "[") output += ',';
        output += "{\"type\":\"";
        output += "file";
        output += "\",\"name\":\"";
        output += String(entry.name());
        output += "\",\"size\":";
        output += String(entry.size());
        output += "}";
#ifdef ESP32
        entry = dir.openNextFile();
#else
        entry.close();
#endif
      }
#ifdef ESP32
      dir.close();
#endif
      output += "]";
      request->send(200, "application/json", output);
      output = String();
    }
    else if(request->hasParam("edit") || request->hasParam("download")){
      request->send(request->_tempFile, request->_tempFile.name(), String(), request->hasParam("download"));
    }
    else {
      const char * buildTime = __DATE__ " " __TIME__ " GMT";
      if (request->header("If-Modified-Since").equals(buildTime)) {
        request->send(304);
      } else {
        AsyncWebServerResponse *response = request->beginResponse_P(200, "text/html", edit_htm_gz, edit_htm_gz_len);
        response->addHeader("Content-Encoding", "gzip");
        response->addHeader("Last-Modified", buildTime);
        request->send(response);
      }
    }
  } else if(request->method() == HTTP_DELETE){
    if(request->hasParam("path", true)){
        _fs.remove(request->getParam("path", true)->value());
      request->send(200, "", "DELETE: "+request->getParam("path", true)->value());
    } else
      request->send(404);
  } else if(request->method() == HTTP_POST){
    if(request->hasParam("data", true, true) && _fs.exists(request->getParam("data", true, true)->value()))
      request->send(200, "", "UPLOADED: "+request->getParam("data", true, true)->value());
    else
      request->send(500);
  } else if(request->method() == HTTP_PUT){
    if(request->hasParam("path", true)){
      String filename = request->getParam("path", true)->value();
      if(_fs.exists(filename)){
        request->send(200);
      } else {
        fs::File f = _fs.open(filename, "w");
        if(f){
          f.write((uint8_t)0x00);
          f.close();
          request->send(200, "", "CREATE: "+filename);
        } else {
          request->send(500);
        }
      }
    } else
      request->send(400);
  }
}

void SPIFFSEditor::handleUpload(AsyncWebServerRequest *request, const String& filename, size_t index, uint8_t *data, size_t len, bool final){
  if(!index){
    if(!_username.length() || request->authenticate(_username.c_str(),_password.c_str())){
      _authenticated = true;
      request->_tempFile = _fs.open(filename, "w");
      _startTime = millis();
    }
  }
  if(_authenticated && request->_tempFile){
    if(len){
      request->_tempFile.write(data,len);
    }
    if(final){
      request->_tempFile.close();
    }
  }
}
